name: Pocket ZIP files

on:
  push:
    branches:
      - master

jobs:
  list_cores:
    runs-on: ubuntu-latest
    outputs:
      cores: ${{ steps.generate-matrix.outputs.cores }}

    steps:
    - uses: actions/checkout@v2
    - id: generate-matrix
      run: |
        cd pocket/raw/Cores
        CORES=$(tree -J -d -L 1 | jq -c '.[0].contents | map(.name)')
        echo $CORES
        echo "cores=${CORES}" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v3
      with:
        name: pocket-raw
        path: pocket/raw/
  my_echo:
    runs-on: ubuntu-latest
    needs:
      - list_cores
    steps:
      - name: Echo previous outputs
        run: echo "${{ fromJSON(needs.list_cores.outputs.cores) }}"
  zip_cores:
    runs-on: ubuntu-latest
    needs:
      - my_echo
      - list_cores
    strategy:
      matrix:
        core: ${{ fromJSON(needs.list_cores.outputs.cores) }}
    steps:
      - id: core_name
        run: |
          string=${{ matrix.core }}
          echo "longname=${{ matrix.core }}" >> $GITHUB_OUTPUT
          prefix="jotego."
          CORE=${string#"$prefix"}
          echo "shortname=${CORE}" >> $GITHUB_OUTPUT
      - name: echo core name
        run: echo ${{ steps.core_name.outputs.* }}

      - uses: actions/download-artifact@v3
        with:
          name: pocket-raw
          path: core_files

      - id: files_and_folders
        run: |
          shortname=${{ steps.core_name.outputs.shortname }}
          longname=${{ steps.core_name.outputs.longname }}

          echo "${shortname}.txt" > file_list.txt
          echo "Cores/${longname}" >> file_list.txt
          echo "Presets/${longname}" >> file_list.txt
          echo "Assets/${shortname}" >> file_list.txt
          echo "Platforms/${shortname}.json" >> file_list.txt
          echo "Platforms/_images/${shortname}.bin" >> file_list.txt
      - name: echo files
        run: cat file_list.txt
      - name: make zip
        working-directory: ./core_files
        run: |
          zip -r ../${{ steps.core_name.outputs.longname }}.zip $(cat ../file_list.txt)
      # - name: validate zip
      #   run: npx openfpga-validator check ${{ steps.core_name.outputs.longname }}.zip
      - uses: actions/upload-artifact@v3
        with:
          name: built_zips
          path: ./${{ steps.core_name.outputs.longname }}.zip
  commit_zips:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - zip_cores
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: built_zips
          path: pocket/zips
      - run: ls pocket/zips
      - name: commit zips
        working_directory: pocket/zips
        run: |
          git config --global user.email "miki.saito@jotego.es"
          git config --global user.name "The CI/CD Bot"
          git add *
          git commit -m "BOT: adding Pocket release files"
          git push origin master
